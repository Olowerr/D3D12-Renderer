

#define NUM_SHADOW_OFFSETS 64
static const float3 SHADOW_OFFSETS[NUM_SHADOW_OFFSETS] =
{
    // First 4 are the furthest away (corners)
    float3(0.779656f, 0.958106f, 0.680375f),
    float3(-0.901334f, -0.955054f, -0.211234f),
    float3(0.791307f, -0.930540f, 0.566198f),
    float3(-0.796999f ,0.873692f, 0.596880f),  

    float3(-0.743500f, -0.986061f, 0.823295f),
    float3(-0.439657f, -0.894986f, -0.604897f),
    float3(-0.125690f, -0.883389f, -0.329554f),
    float3(0.083758f, -0.808672f, 0.536459f),
    float3(0.443052f, -0.964713f, -0.444451f),
    float3(0.629337f, -0.879009f, 0.107940f),
    float3(-0.932272f, -0.650479f, -0.045206f),
    float3(-0.524972f, -0.591098f, 0.257742f),
    float3(-0.367969f, -0.604427f, -0.270431f),
    float3(-0.090426f, -0.731452f, 0.026802f),
    float3(0.169240f, -0.632321f, 0.904459f),
    float3(0.445715f, -0.558107f, 0.832390f),
    float3(0.636387f, -0.742859f, 0.271423f),
    float3(0.897267f, -0.500618f, 0.434594f),
    float3(-0.838374f, -0.463904f, -0.716795f),
    float3(-0.596873f, -0.266617f, 0.213938f),
    float3(-0.384480f, -0.275208f, -0.967399f),
    float3(-0.118297f, -0.423696f, -0.514226f),
    float3(0.012963f, -0.282838f, -0.725537f),
    float3(0.460364f, -0.406552f, 0.608353f),
    float3(0.690916f, -0.471191f, -0.686642f),
    float3(0.887814f, -0.472915f, -0.198111f),
    float3(-0.917631f, -0.243606f, -0.740419f),
    float3(-0.687773f, -0.006623f, -0.782382f),
    float3(-0.468192f, -0.087527f, 0.997849f),
    float3(-0.067133f, -0.191282f, -0.563486f),
    float3(0.222495f, -0.075068f, 0.025865f),
    float3(0.408078f, -0.202986f, 0.678224f),
    float3(0.660855f, -0.034974f, 0.225280f),
    float3(0.777436f, -0.195517f, -0.407937f),
    float3(-0.961653f, 0.143078f, 0.275105f),
    float3(-0.719108f, 0.023530f, 0.048574f),
    float3(-0.333941f, 0.235939f, -0.012834f),
    float3(-0.167348f, 0.102298f, 0.945550f),
    float3(0.052339f, 0.235237f, -0.414966f),
    float3(0.282693f, 0.141362f, 0.542715f),
    float3(0.568911f, 0.130451f, 0.053490f),
    float3(0.973670f, 0.054262f, 0.539828f),
    float3(-0.974456f, 0.466018f, -0.199543f),
    float3(-0.523934f, 0.393353f, 0.783059f),
    float3(-0.401158f, 0.336276f, -0.433371f),
    float3(-0.240638f, 0.367489f, -0.295083f),
    float3(0.185263f, 0.357631f, 0.615449f),
    float3(0.432066f, 0.403264f, 0.838053f),
    float3(0.623844f, 0.281663f, -0.860489f),
    float3(0.808359f, 0.476173f, 0.898654f),
    float3(-0.891209f, 0.538537f, 0.051991f),
    float3(-0.565691f, 0.563425f, -0.827888f),
    float3(-0.262596f, 0.624607f, -0.615572f),
    float3(-0.168775f, 0.694906f, 0.326454f),
    float3(0.013474f, 0.623287f, 0.780465f),
    float3(0.339297f, 0.703726f, -0.302214f),
    float3(0.501663f, 0.523377f, -0.871657f),
    float3(0.818949f, 0.653249f, -0.959954f),
    float3(-0.656934f, 0.791742f, -0.084597f),
    float3(-0.403127f, 0.938292f, -0.873808f),
    float3(-0.112331f, 0.761574f, -0.523440f),
    float3(0.169919f, 0.891186f, 0.941268f),
    float3(0.403989f, 0.914258f, 0.804416f),
    float3(0.626965f, 0.964705f,0.701840f),
};

































































